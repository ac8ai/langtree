[project]
name = "langtree"
version = "0.1.0"
description = "A tool to orchestrate prompts for structured generation with LangChain"
authors = [{name="Tom Bukic", email="tom@ac8.ai"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["langchain", "prompts", "structured-generation", "ai", "llm", "orchestration"]


dependencies = [
    "langchain>=0.3.12",
    "langchain-openai>=0.2.12",
    "langchain-anthropic>=0.2.4",
    "langchain-google-genai>=2.0.7",
    "langchain-community>=0.3.16",
    "langchain-unstructured>=0.1.6",
    "more-itertools>=10.6.0",
    "markdown>=3.8",
    "inflection>=0.5.1",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29",
    "ipywidgets>=8.1.5",
    "pre-commit>=4.0",
    "nbdev>=2.3",
    "poethepoet>=0.29",
    "ruff>=0.11.9",
    "nbconvert>=7.16",
    "pytest>=8.3",
    "coverage[toml]>=7.10.6",
    "pytest-cov>=7.0.0",
]

docs = [
    "mkdocs-material>=9.6.20",
    "mkdocstrings[python]>=0.24.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatchling.build]
include = ["src/langtree"]

[tool.pytest.ini_options]
addopts = "--cov=langtree --cov-branch --cov-report=term-missing -rA"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.ruff.format]
quote-style = "double"
indent-style = "space" 